### Redirects ###
server {
    listen         80;
    server_name    $HOSTNAME www.$HOSTNAME;
    return         301 https://www.$HOSTNAME$request_uri;
}

# Change naked domain to www
server {
    listen          443 ssl http2;
    server_name     $HOSTNAME;

    ssl_protocols               TLSv1.3 TLSv1.2;
    ssl_ciphers                 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers   on;
    ssl_session_cache           shared:SSL:10m;
    ssl_session_timeout         10m;
    ssl_certificate             /etc/nginx/ssl/server.pem;
    ssl_certificate_key         /etc/nginx/ssl/server.key;
    ssl_dhparam                 /etc/nginx/ssl/dhparams.pem;

    rewrite         ^ https://www.$HOSTNAME$request_uri;
}


### Servers ###

server {
    listen          443 ssl http2 default_server;
    server_name     www.$HOSTNAME;
    access_log      /var/log/nginx/$PROJECT_NAME.access.log;
    error_log       /var/log/nginx/$PROJECT_NAME.error.log;
    access_log      $REPO_PATH/logs/nginx/access.log;
    error_log       $REPO_PATH/logs/nginx/error.log;

    ssl_protocols               TLSv1.3 TLSv1.2;
    ssl_ciphers                 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers   on;
    ssl_session_cache           shared:SSL:10m;
    ssl_session_timeout         10m;
    ssl_certificate             /etc/nginx/ssl/server.pem;
    ssl_certificate_key         /etc/nginx/ssl/server.key;
    ssl_dhparam                 /etc/nginx/ssl/dhparams.pem;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

    location / {
        include          sites-enabled/$PROJECT_NAME-headers;
        proxy_pass       http://127.0.0.1:$INTERNAL_PORT;
        proxy_buffering  off;
        add_header       'Cache-Control'                 'public';
        expires          7d;
    }

    location /static {
        include          sites-enabled/$PROJECT_NAME-headers;
        root             $REPO_PATH;
        add_header       'Access-Control-Allow-Origin'   'https://www.$HOSTNAME';
        add_header       'Access-Control-Allow-Methods'  'GET, HEAD, OPTIONS';
        add_header       'Access-Control-Allow-Headers'  'range';
        add_header       'Access-Control-Expose-Headers' 'content-length';
        add_header       'Access-Control-Max-Age'        '1728000';
        add_header       'Cache-Control'                 'public';
        expires          24h;
    }
}
